definitions:
  model.LoginRequest:
    properties:
      user_id:
        type: string
    required:
    - user_id
    type: object
  model.Register:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    required:
    - email
    - first_name
    - last_name
    type: object
  model.TokenPair:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  status.Status:
    properties:
      code:
        type: integer
      count:
        type: integer
      data: {}
      error:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    type: object
host: localhost:8095
info:
  contact: {}
  description: Authorization Service for Medods
  title: Medods Auth Service
  version: "1.0"
paths:
  /api/auth/login:
    post:
      description: Login Get Access/ Refresh token
      operationId: login
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      responses:
        "200":
          description: Tokens
          schema:
            $ref: '#/definitions/model.TokenPair'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/status.Status'
      summary: Login
      tags:
      - auth
  /api/auth/refresh:
    post:
      description: Refresh tokens (access and refresh token)
      operationId: refresh
      parameters:
      - description: Access token
        in: header
        name: access_token
        required: true
        type: string
      - description: Refresh token
        in: header
        name: refresh_token
        required: true
        type: string
      responses:
        "200":
          description: Refreshed Tokens
          schema:
            $ref: '#/definitions/model.TokenPair'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/status.Status'
      summary: Refresh tokens
      tags:
      - auth
  /api/auth/register:
    post:
      description: Functionality to test Login function
      operationId: register
      parameters:
      - description: Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/model.Register'
      responses:
        "200":
          description: Tokens
          schema:
            $ref: '#/definitions/model.TokenPair'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/status.Status'
      summary: Register new user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
